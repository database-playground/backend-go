syntax = "proto3";

package questionmanager.v1;

import "common/v1/common.proto";
import "questionmanager/v1/model.proto";

service QuestionManagerService {
    rpc GetSchema(GetSchemaRequest) returns (GetSchemaResponse) {}
    rpc GetSchemaInitialSQL(GetSchemaInitialSQLRequest) returns (GetSchemaInitialSQLResponse) {}

    rpc ListQuestions(ListQuestionsRequest) returns (ListQuestionsResponse) {}
    rpc GetQuestion(GetQuestionRequest) returns (GetQuestionResponse) {}
    rpc GetQuestionAnswer(GetQuestionAnswerRequest) returns (GetQuestionAnswerResponse) {}
    rpc GetQuestionSolution(GetQuestionSolutionRequest) returns (GetQuestionSolutionResponse) {}
}

message GetSchemaRequest {
    string id = 1;
}

message GetSchemaResponse {
    Schema schema = 1;
}

message GetSchemaInitialSQLRequest {
    string id = 1;
}

message GetSchemaInitialSQLResponse {
    SchemaInitialSQL schema_initial_sql = 1;
}

message ListQuestionsRequest {
    optional common.v1.Cursor cursor = 1;
}

message ListQuestionsResponse {
    repeated Question questions = 1;
}

message GetQuestionRequest {
    int64 id = 1;
}

message GetQuestionResponse {
    Question question = 1;
}

message GetQuestionAnswerRequest {
    int64 id = 1;
}

message GetQuestionAnswerResponse {
    QuestionAnswer question_answer = 1;
}

message GetQuestionSolutionRequest {
    int64 id = 1;
}

message GetQuestionSolutionResponse {
    QuestionSolution question_solution = 1;
}
